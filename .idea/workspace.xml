<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2870b505-6baf-4dc6-b294-b8ad61907587" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/http-service">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/worker-service">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
                <item name="http-service" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
                <item name="http-service" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
                <item name="http-service" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
                <item name="worker-service" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
                <item name="worker-service" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="my-microservices-project" type="f1a62948:ProjectNode" />
                <item name="worker-service" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Interface" />
        <option value="Dockerfile" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2ptEvJcrkuQnN5lpcCdBB7Ilb1u" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showVisibilityIcons" value="true" />
    <option name="sortByType" value="true" />
    <option name="sortKey" value="BY_TYPE" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Docker.http-service.http-service: Compose Deployment.executor": "Run",
    "Docker.http-service.postgres: Compose Deployment.executor": "Run",
    "Docker.http-service: Compose Deployment.executor": "Run",
    "Docker.infrastructure.kafka: Compose Deployment.executor": "Run",
    "Docker.infrastructure: Compose Deployment.executor": "Run",
    "Docker.worker-service.worker-service: Compose Deployment.executor": "Run",
    "Docker.worker-service: Compose Deployment.executor": "Run",
    "Gradle.Build http-kafka-task.executor": "Run",
    "Gradle.Build kafka-test-app-main.executor": "Run",
    "Gradle.http-kafka-task:http-service [bootJar].executor": "Run",
    "Gradle.http-kafka-task:http-service [build].executor": "Run",
    "Gradle.http-kafka-task:worker-service [bootJar].executor": "Run",
    "Gradle.http-kafka-task:worker-service [build].executor": "Run",
    "Gradle.kafka-test-app-main:http-service [bootJar].executor": "Run",
    "Gradle.kafka-test-app-main:http-service [build].executor": "Run",
    "Gradle.kafka-test-app-main:http-service [clean].executor": "Run",
    "Gradle.kafka-test-app-main:worker-service [bootJar].executor": "Run",
    "Gradle.kafka-test-app-main:worker-service [build].executor": "Run",
    "HTTP Request.generated-requests | #1.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.HttpServiceApplication.executor": "Run",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/mycode/java/http-kafka-task/http-service",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.23991276",
    "project.structure.side.proportion": "0.2",
    "run.configurations.included.in.services": "true",
    "service.view.auto.scroll.to.source": "true",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.example.worker.model" />
      <recent name="com.example.worker.enums" />
      <recent name="com.example.http.enums" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\mycode\java\http-kafka-task\http-service" />
      <recent name="C:\mycode\java\http-kafka-task" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\mycode\java\http-kafka-task\worker-service" />
      <recent name="C:\mycode\java\http-kafka-task" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Gradle.kafka-test-app-main:worker-service [bootJar]">
    <configuration name="kafka-test-app-main:http-service [bootJar]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/http-service" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="bootJar" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="kafka-test-app-main:worker-service [bootJar]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$/worker-service" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="bootJar" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="http-kafka-task" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="http-kafka-task" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HttpServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="my-microservices-project.http-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.http.HttpServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WorkerServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="my-microservices-project.worker-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.worker.WorkerServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WorkerServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="my-microservices-project.worker-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.demo.WorkerServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="http-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="http-service/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="worker-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="worker-service/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="worker-service.worker-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="worker-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="worker-service/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.http-service: Compose Deployment" />
      <item itemvalue="Docker.worker-service.worker-service: Compose Deployment" />
      <item itemvalue="Docker.worker-service: Compose Deployment" />
      <item itemvalue="Gradle.kafka-test-app-main:worker-service [bootJar]" />
      <item itemvalue="Gradle.kafka-test-app-main:http-service [bootJar]" />
      <item itemvalue="Spring Boot.WorkerServiceApplication (1)" />
      <item itemvalue="Spring Boot.HttpServiceApplication" />
      <item itemvalue="Spring Boot.WorkerServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.kafka-test-app-main:worker-service [bootJar]" />
        <item itemvalue="Gradle.kafka-test-app-main:http-service [bootJar]" />
        <item itemvalue="Docker.worker-service.worker-service: Compose Deployment" />
        <item itemvalue="Docker.worker-service: Compose Deployment" />
        <item itemvalue="Docker.http-service: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2870b505-6baf-4dc6-b294-b8ad61907587" name="Changes" comment="" />
      <created>1733577203565</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1733577203565</updated>
      <workItem from="1733577205738" duration="11659000" />
      <workItem from="1733755007745" duration="4559000" />
      <workItem from="1733829940038" duration="310000" />
      <workItem from="1733842378597" duration="3635000" />
      <workItem from="1733925813988" duration="5900000" />
      <workItem from="1734009424566" duration="7810000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>